var documenterSearchIndex = {"docs":
[{"location":"api_reference/","page":"API Reference","title":"API Reference","text":"CurrentModule = FredData","category":"page"},{"location":"api_reference/#API-Reference","page":"API Reference","title":"API Reference","text":"","category":"section"},{"location":"api_reference/","page":"API Reference","title":"API Reference","text":"","category":"page"},{"location":"api_reference/","page":"API Reference","title":"API Reference","text":"Modules = [FredData]\nPrivate = false","category":"page"},{"location":"api_reference/#FredData.Fred","page":"API Reference","title":"FredData.Fred","text":"A connection to the Fred API.\n\nConstructors\n\nFred(): Key detected automatically. First, looks for the environment variable   FRED_API_KEY, then looks for the file ~/.freddatarc.\nFred(key::AbstractString): User specifies key directly\n\nArguments\n\nkey: Registration key provided by FRED.\n\nNotes\n\nSet the API url with set_api_url!(f::Fred, url::AbstractString)\n\n\n\n\n\n","category":"type"},{"location":"api_reference/#FredData.FredSeries","page":"API Reference","title":"FredData.FredSeries","text":"FredSeries(...)\n\nRepresent a single data series, and all associated metadata, as queried from FRED.\n\nThe following fields are available:\n\nid: Series ID\ntitle: Series title\nunits_short: Units (abbr.)\nunits: Units\nseas_adj_short: Seasonal adjustment (abbr.)\nseas_adj:Seasonal adjustment\nfreq_short:Native frequency (abbr.)\nfreq:Native frequency\nrealtime_start:Date realtime period starts\nrealtime_end:Date realtime period ends\nlast_updated:Date series last updated\nnotes:Series notes\ntrans_short:Transformation of queried data (abbr.)\ndata:The actual data; DataFrame with columns :realtime_start, :realtime_end, :date, :value\n\n\n\n\n\n","category":"type"},{"location":"api_reference/#FredData.get_api_key-Tuple{Fred}","page":"API Reference","title":"FredData.get_api_key","text":"Get the FRED API key that is used for this connection\n\n\n\n\n\n","category":"method"},{"location":"api_reference/#FredData.get_api_url-Tuple{Fred}","page":"API Reference","title":"FredData.get_api_url","text":"Get the base URL used to connect to the FRED server\n\n\n\n\n\n","category":"method"},{"location":"api_reference/#FredData.get_data-Tuple{Fred, AbstractString}","page":"API Reference","title":"FredData.get_data","text":"get_data(f::Fred, series::AbstractString; kwargs...)\n\nRequest one series using the FRED API.\n\nArguments\n\nf: Fred connection object\nseries: series mnemonic\n\nOptional Arguments\n\nkwargs...: key-value pairs to be appended to the FRED request. Accepted keys include:\n\nrealtime_start: the start of the real-time period as YYYY-MM-DD string\nrealtime_end: the end of the real-time period as YYYY-MM-DD string\nlimit: maximum number of results to return\noffset: non-negative integer\nsort_order: \"asc\", \"desc\"\nobservation_start: the start of the observation period as YYYY-MM-DD string\nobservation_end: the end of the observation period as YYYY-MM-DD string\nunits: one of \"lin\", \"chg\", \"ch1\", \"pch\", \"pc1\", \"pca\", \"cch\", \"cca\", \"log\"\nfrequency: one of \"d\", \"w\", \"bw\", \"m\", \"q\", \"sa\", \"a\", \"wef\", \"weth\", \"wew\", \"wetu\", \"wem\", \"wesu\", \"wesa\", \"bwew\", \"bwem\"\naggregation_method: one of \"avg\", \"sum\", \"eop\"\noutput_type: one of 1 (obsevations by real-time period), 2 (observations by vintage date, all observations), 3 (observations by vintage date, new and revised observations only), 4 (observations, initial release only)\nvintage_dates: vintage dates as comma-separated YYYY-MM-DD strings\n\n\n\n\n\n","category":"method"},{"location":"api_reference/#FredData.set_api_url!-Tuple{Fred, AbstractString}","page":"API Reference","title":"FredData.set_api_url!","text":"Set the base URL used to connect to the FRED server\n\n\n\n\n\n","category":"method"},{"location":"history/#News","page":"History","title":"News","text":"","category":"section"},{"location":"history/#v0.5.0-(2021-04-23)","page":"History","title":"v0.5.0 (2021-04-23)","text":"","category":"section"},{"location":"history/","page":"History","title":"History","text":"Add DataFrames.jl v1 compatibility   (#19 by   @chenwilliam77)","category":"page"},{"location":"history/#v0.4.0-(2020-02-04)","page":"History","title":"v0.4.0 (2020-02-04)","text":"","category":"section"},{"location":"history/","page":"History","title":"History","text":"Fix compatibility upper bounds","category":"page"},{"location":"history/#v0.3.2-(2020-02-04)","page":"History","title":"v0.3.2 (2020-02-04)","text":"","category":"section"},{"location":"history/","page":"History","title":"History","text":"Fix compatibility issue with TimeZones.jl (#17 by @fratrik)\nBump minimum version of TimeZones.jl to 0.11, in turn bumping minimum version of Julia to v1","category":"page"},{"location":"history/#v0.3.1-(2019-09-30)","page":"History","title":"v0.3.1 (2019-09-30)","text":"","category":"section"},{"location":"history/","page":"History","title":"History","text":"Fix usage of @warn (#15 by   @greimel)","category":"page"},{"location":"history/#v0.3.0-(2018-07-12)","page":"History","title":"v0.3.0 (2018-07-12)","text":"","category":"section"},{"location":"history/","page":"History","title":"History","text":"Remove compatibility for Julia v0.6 and earlier\nSwitch to HTTP.jl for requests","category":"page"},{"location":"history/#v0.2.0-(2018-02-02)","page":"History","title":"v0.2.0 (2018-02-02)","text":"","category":"section"},{"location":"history/","page":"History","title":"History","text":"Deprecate the old API that provides separate accessor functions for each field of the   FredSeries type. Instead, use s.name, s.data, etc. directly","category":"page"},{"location":"history/#v0.1.0-(2015-12-11)","page":"History","title":"v0.1.0 (2015-12-11)","text":"","category":"section"},{"location":"history/","page":"History","title":"History","text":"Initial release","category":"page"},{"location":"contributing/#Contributing","page":"Contributing","title":"Contributing","text":"","category":"section"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"Contributions are welcome. Interested in contributing to FredData? Please check out open issues or create a new issue.","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"I'm using Julia less these days unfortunately, so I am very open to others who find FredData useful to join as maintaners.  Please contact me if you think this applies to you.","category":"page"},{"location":"contributing/#Dev-install","page":"Contributing","title":"Dev install","text":"","category":"section"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"julia -e '\n    using Pkg\n    Pkg.develop(PackageSpec(path=pwd()))\n    Pkg.instantiate()'","category":"page"},{"location":"contributing/#Running-tests","page":"Contributing","title":"Running tests","text":"","category":"section"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"julia test/runtests.jl","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"Note you need a FRED API key available on your test machine to run integration tests.","category":"page"},{"location":"contributing/#Building-documentation","page":"Contributing","title":"Building documentation","text":"","category":"section"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"Install docs dependencies","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"julia --project=docs -e '\n    using Pkg\n    Pkg.develop(PackageSpec(path=pwd()))\n    Pkg.instantiate()'","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"Build docs","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"julia --project=docs docs/make.jl","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"Serve docs at http://localhost:8000","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"python -m http.server --bind localhost --directory ./docs/build 8000","category":"page"},{"location":"contributing/#Release","page":"Contributing","title":"Release","text":"","category":"section"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"TODO","category":"page"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = FredData","category":"page"},{"location":"#FredData","page":"Home","title":"FredData","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"FredData.jl is a third-party Julia library to pull data from Federal Reserve Economic Data (FRED).","category":"page"},{"location":"","page":"Home","title":"Home","text":"Among other uses, FredData is used by the NY Fed's DSGE.jl package.","category":"page"},{"location":"#Disclaimer","page":"Home","title":"Disclaimer","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"FredData is not affiliated in any way with Federal Reserve Bank of St. Louis and is not officially maintained or otherwise supported by Federal Reserve Bank of St. Louis.","category":"page"},{"location":"","page":"Home","title":"Home","text":"FredData is free software and is issued under the MIT License.","category":"page"},{"location":"#Setup","page":"Home","title":"Setup","text":"","category":"section"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Download the package with","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> Pkg.add(\"FredData\")","category":"page"},{"location":"#FRED-API-Access","page":"Home","title":"FRED API Access","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"FredData uses FRED's Developer API. As such, you must register an API key here in order to pull from the FRED servers.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Make the FRED API key that you just registered accessible to FredData in one of several ways. Ideally, we store your key such that it persists across sessions. In subsequent sections, we'll assume that you have stored your key in one of these ways such that it can be detected automatically. This will allow the use of the zero-argument constructor.","category":"page"},{"location":"#Configuration-File","page":"Home","title":"Configuration File","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Populate a configuration file ~/.freddatarc.","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> open(joinpath(homedir(), \".freddatarc\"), \"w\") do f\n           write(f, \"0123456789abcdef0123456789abcdef\")\n       end","category":"page"},{"location":"#Environment-variable","page":"Home","title":"Environment variable","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Populate the environment variable FRED_API_KEY such that it persists across sessions.","category":"page"},{"location":"","page":"Home","title":"Home","text":"# on macOS/Linux\nshell> echo \"export FRED_API_KEY=0123456789abcdef0123456789abcdef\" >> ~/.bashrc\n\n# on Windows 7+\nshell> setx FRED_API_KEY 0123456789abcdef0123456789abcdef","category":"page"},{"location":"#Constructor","page":"Home","title":"Constructor","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Another option is to provide your API key to the constructor every time you wish to use the package.","category":"page"},{"location":"","page":"Home","title":"Home","text":"f = Fred(\"0123456789abcdef0123456789abcdef\")","category":"page"},{"location":"#Usage","page":"Home","title":"Usage","text":"","category":"section"},{"location":"#Basic-Usage","page":"Home","title":"Basic Usage","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Query observations and metadata.","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> using FredData\n\njulia> f = Fred()\nAPI key loaded.\nFRED API Connection\n        url: http://api.stlouisfed.org/fred/\n        key: 0123456789abcdef0123456789abcdef\n\njulia> a = get_data(f, \"GDPC1\")\nFredSeries\n        id: GDPC1\n        title: Real Gross Domestic Product\n        units: Billions of Chained 2009 Dollars\n        seas_adj (native): Seasonally Adjusted Annual Rate\n        freq (native): Quarterly\n        realtime_start: 2015-12-11\n        realtime_end: 2015-12-11\n        last_updated: 2015-11-24T08:01:09\n        notes: BEA Account Code: A191RX1 Real gross domestic product is the inflation adjusted value of the goods and services produced by labor and property located in the United States. For more information see the Guide to the National Income and Product Accounts of the United States (NIPA) - (http://www.bea.gov/national/pdf/nipaguid.pdf)\n        trans_short: lin\n        data: 275x4 DataFrame with columns [:realtime_start,:realtime_end,:date,:value]","category":"page"},{"location":"#Advanced-Usage","page":"Home","title":"Advanced Usage","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Add optional arguments. All optional arguments specified by the FRED API are supported.","category":"page"},{"location":"","page":"Home","title":"Home","text":"using FredData\nf = Fred()\ndata = get_data(f, \"GDPC1\"; vintage_dates=\"2008-09-15\")\ndata = get_data(f, \"GDPC1\"; frequency=\"a\", units=\"chg\")","category":"page"},{"location":"","page":"Home","title":"Home","text":"For a full list of optional arguments, see get_data or the FRED API docs","category":"page"},{"location":"#The-Fred-type","page":"Home","title":"The Fred type","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The Fred type represents a connection to the FRED API.","category":"page"},{"location":"","page":"Home","title":"Home","text":"See Fred.","category":"page"},{"location":"#The-FredSeries-type","page":"Home","title":"The FredSeries type","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The FredSeries type contains the data in a query response.","category":"page"},{"location":"","page":"Home","title":"Home","text":"See FredSeries.","category":"page"}]
}
